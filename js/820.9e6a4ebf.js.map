{"version":3,"file":"js/820.9e6a4ebf.js","mappings":"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","sources":["webpack://debil_overlay/./src/views/overlay.vue","webpack://debil_overlay/./src/components/bouncing_emote.vue","webpack://debil_overlay/./src/components/bouncing_emote.vue?121d","webpack://debil_overlay/./src/utils/chat.js","webpack://debil_overlay/./src/utils/twitch.js","webpack://debil_overlay/./src/utils/tpd.js","webpack://debil_overlay/./src/views/overlay.vue?c7f4","webpack://debil_overlay/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://debil_overlay/./node_modules/core-js/internals/regexp-flags.js","webpack://debil_overlay/./node_modules/core-js/modules/es.regexp.flags.js"],"sourcesContent":["<template>\r\n    <div id=\"canvas\">\r\n        <transition-group  :name=\"transition_group\">\r\n            <BouncingEmote v-for=\"em in currentEmotes\" :key=\"em.Id\" :Url=\"em.Url\" :width=\"em.Width\"/>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport BouncingEmote from '@/components/bouncing_emote.vue'\r\nimport Twitch from '@/utils/twitch.js'\r\nimport apis from '@/utils/tpd.js'\r\n\r\nexport default {\r\n    name: 'OverlayView',\r\n    components: {\r\n        BouncingEmote\r\n    },\r\n    computed: {\r\n        transition_group() {\r\n        if (this.deleteAfter != \"0\") return \"tr\"\r\n            return \"fl\"\r\n      }\r\n    },\r\n    data() {\r\n        return {\r\n            channelID: null,\r\n\r\n            // editable:\r\n            maxEmoteLife: 3,\r\n            channel: \"shampan0v\",\r\n            //\r\n\r\n            currentEmotes: [],\r\n            Emotes: [],\r\n            MessagesTemp: [],\r\n\r\n            lastThink: Date.now(),\r\n\r\n            meanMessagesPerSecond: 0,\r\n        }\r\n    },\r\n    methods: {\r\n        async get7tvchannel() {\r\n        let stv = await apis.RetryOnError(apis.get7tvEmotes, [this.channelID], 3)\r\n        if (stv.length > 0) {\r\n          console.log(\"loaded seventv channel\")\r\n          this.Emotes = Object.assign(this.Emotes, stv[0])\r\n\r\n          // initializing event api\r\n        //   if (this.useEventAPI) {\r\n        //     this.EventApi = new EventApi(stv[1], this.channelID, this.onEmoteAdd, this.onEmoteRename)\r\n\r\n        //     this.EventApi.onDelete = this.onEmoteDelete\r\n        //     this.EventApi.onAdd = this.onEmoteAdd\r\n        //     this.EventApi.onRename = this.onEmoteRename\r\n\r\n        //     this.EventApi.onBadgeCreate = this.onBadgeCreate\r\n        //     this.EventApi.onBadgeDelete = this.onBadgeDelete\r\n        //     this.EventApi.onPaintCreate = this.onPaintCreate\r\n        //     this.EventApi.onPaintDelete = this.onPaintDelete\r\n\r\n        //     this.EventApi.onPersonalEmotes = this.onPersonalEmotes\r\n\r\n        //     this.EventApi.Connect()\r\n        //   }\r\n        }\r\n        },\r\n        async onUserID(id) {\r\n            this.channelID = id\r\n            this.get7tvchannel()\r\n\r\n        },\r\n        async calcMeanMessages() {\r\n            let messagesPerSecond = 1 / ((Date.now() - this.lastThink)/1000)\r\n            this.lastThink = Date.now()\r\n            this.meanMessagesPerSecond = (this.meanMessagesPerSecond + messagesPerSecond) / 2\r\n        },\r\n        async decide(payload) {\r\n            this.currentEmotes.push({\r\n                Url: `https://cdn.7tv.app/emote/${payload.extEmotes[0].ID}/3x.webp`,\r\n                Id: payload.tags.id,\r\n                Width: Math.floor(payload.extEmotes[0].ratio*32)\r\n            })\r\n            setTimeout((id) => {\r\n                this.currentEmotes = this.currentEmotes.filter((m) => m.Id != id)\r\n            }, this.maxEmoteLife*1000, payload.tags.id);\r\n        }\r\n    },\r\n    created: async function() {\r\n        this.client = new Twitch(this.channel)\r\n        this.client.OnUserId = this.onUserID\r\n        this.client.OnPrivateMessage = async (payload) => {\r\n                this.MessagesTemp.push(payload)\r\n                payload.extEmotes = []\r\n                /* eslint-disable no-unused-vars */\r\n                for (const i of payload.parameters.split(\" \")) {\r\n                    if (this.Emotes[i]) {\r\n                    let em = this.Emotes[i]\r\n                    payload.extEmotes.push(em)\r\n                    }\r\n                }\r\n                if (payload.extEmotes.length > 0) {\r\n                    this.MessagesTemp.push(payload)\r\n                    this.calcMeanMessages()\r\n                    this.decide(payload)\r\n                }\r\n        }\r\n        this.client.connect()\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n    div #canvas {\r\n        position: absolute;\r\n        bottom: 0;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n    }\r\n\r\n    .tr-leave-active {\r\n    transition: opacity 0.5s ease;\r\n    }\r\n    .tr-leave-to {\r\n        opacity: 0;\r\n    }\r\n</style>","<template>\r\n    <div id=\"bouncingEmote\">\r\n        <img :src=\"Url\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport default {\r\n  name: 'BouncingEmote',\r\n\r\n  data() {\r\n    return {\r\n        maxX: 0,\r\n        maxY: 0,\r\n\r\n        interval: undefined,\r\n        posX: getRandomInt(window.innerWidth-100),\r\n        posY: getRandomInt(window.innerHeight-100),\r\n        speed: 2,\r\n        changeX: 1,\r\n        changeY: 1,\r\n        imgHeight: 96,\r\n\r\n        imgPos: { //@TODO: сделать рандом\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n  },\r\n\r\n  props: {\r\n    Url: String,\r\n    width: Number,\r\n  },\r\n\r\n  mounted() {\r\n    this.imgPos = {\r\n            x: this.posX,\r\n            y: this.posY\r\n    }\r\n    this.interval = setInterval(this.update, 4)\r\n  },\r\n\r\n  methods: {\r\n    update() {\r\n        let maxX = window.innerWidth\r\n        let maxY = window.innerHeight\r\n        this.maxX = maxX\r\n        this.maxY = maxY\r\n\r\n        this.posX += this.speed * this.changeX\r\n        this.posY += this.speed * this.changeY\r\n\r\n        let isRight = this.posX >= (maxX - this.width)\r\n        let isBottom = this.posY >= (maxY - this.imgHeight)\r\n        let isTop = this.posY <= 0\r\n        let isLeft = this.posX <= this.width\r\n\r\n        if (isLeft || isRight) {\r\n            this.changeX *= -1\r\n        }\r\n        if (isBottom || isTop) {\r\n            this.changeY *= -1\r\n        }\r\n\r\n        this.imgPos = {\r\n            x: this.posX,\r\n            y: this.posY\r\n        }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    position() {\r\n        return `translate(${this.imgPos.x}px, ${this.imgPos.y}px)`\r\n    },\r\n    x() {\r\n        return `${this.posX}px`\r\n    },\r\n    y() {\r\n        return `${this.posY}px`\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n    div #bouncingEmote {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 32px;\r\n        background: none;\r\n        left: v-bind(\"x\");\r\n        top: v-bind(\"y\");\r\n        position: absolute;\r\n    }\r\n</style>","import { render } from \"./bouncing_emote.vue?vue&type=template&id=cbf6bbb0\"\nimport script from \"./bouncing_emote.vue?vue&type=script&lang=js\"\nexport * from \"./bouncing_emote.vue?vue&type=script&lang=js\"\n\nimport \"./bouncing_emote.vue?vue&type=style&index=0&id=cbf6bbb0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function parseTags(tags) {\r\n    // badge-info=;badges=broadcaster/1;color=#0000FF;...\r\n\r\n    const tagsToIgnore = {  // List of tags to ignore.\r\n        'client-nonce': null,\r\n        'flags': null\r\n    };\r\n\r\n    let dictParsedTags = {};  // Holds the parsed list of tags.\r\n                              // The key is the tag's name (e.g., color).\r\n    let parsedTags = tags.split(';'); \r\n\r\n    parsedTags.forEach(tag => {\r\n        let parsedTag = tag.split('=');  // Tags are key/value pairs.\r\n        let tagValue = (parsedTag[1] === '') ? null : parsedTag[1];\r\n\r\n        switch (parsedTag[0]) {  // Switch on tag name\r\n            case 'badges':\r\n            case 'badge-info':\r\n                // badges=staff/1,broadcaster/1,turbo/1;\r\n\r\n                if (tagValue) {\r\n                    let dict = {};  // Holds the list of badge objects.\r\n                                    // The key is the badge's name (e.g., subscriber).\r\n                    let badges = tagValue.split(','); \r\n                    badges.forEach(pair => {\r\n                        let badgeParts = pair.split('/');\r\n                        dict[badgeParts[0]] = badgeParts[1];\r\n                    })\r\n                    dictParsedTags[parsedTag[0]] = dict;\r\n                }\r\n                else {\r\n                    dictParsedTags[parsedTag[0]] = null;\r\n                }\r\n                break;\r\n            case 'emotes':\r\n                // emotes=25:0-4,12-16/1902:6-10\r\n\r\n                if (tagValue) {\r\n                    let dictEmotes = {};  // Holds a list of emote objects.\r\n                                          // The key is the emote's ID.\r\n                    let emotes = tagValue.split('/');\r\n                    emotes.forEach(emote => {\r\n                        let emoteParts = emote.split(':');\r\n\r\n                        let textPositions = [];  // The list of position objects that identify\r\n                                                 // the location of the emote in the chat message.\r\n                        let positions = emoteParts[1].split(',');\r\n                        positions.forEach(position => {\r\n                            let positionParts = position.split('-');\r\n                            textPositions.push({\r\n                                startPosition: positionParts[0],\r\n                                endPosition: positionParts[1]    \r\n                            })\r\n                        });\r\n\r\n                        dictEmotes[emoteParts[0]] = textPositions;\r\n                    })\r\n\r\n                    dictParsedTags[parsedTag[0]] = dictEmotes;\r\n                }\r\n                else {\r\n                    dictParsedTags[parsedTag[0]] = null;\r\n                }\r\n\r\n                break;\r\n            case 'emote-sets': {\r\n                // emote-sets=0,33,50,237\r\n\r\n                let emoteSetIds = tagValue.split(',');  // Array of emote set IDs.\r\n                dictParsedTags[parsedTag[0]] = emoteSetIds;\r\n                break;\r\n            }\r\n            default:\r\n                // If the tag is in the list of tags to ignore, ignore\r\n                // it; otherwise, add it.\r\n\r\n                if (!Object.prototype.hasOwnProperty.call(tagsToIgnore, parsedTag[0])) { \r\n                    dictParsedTags[parsedTag[0]] = tagValue;\r\n                }\r\n        } \r\n    });\r\n\r\n    return dictParsedTags;\r\n}\r\nfunction parseCommand(rawCommandComponent) {\r\n    let parsedCommand = null;\r\n    let commandParts = rawCommandComponent.split(' ');\r\n\r\n    switch (commandParts[0]) {\r\n        case 'JOIN':\r\n        case 'PART':\r\n        case 'NOTICE':\r\n        case 'CLEARCHAT':\r\n        case 'CLEARMSG':\r\n        case 'HOSTTARGET':\r\n        case 'PRIVMSG':\r\n            parsedCommand = {\r\n                command: commandParts[0],\r\n                channel: commandParts[1]\r\n            }\r\n            break;\r\n        case 'PING':\r\n            parsedCommand = {\r\n                command: commandParts[0]\r\n            }\r\n            break;\r\n        case 'CAP':\r\n            parsedCommand = {\r\n                command: commandParts[0],\r\n                isCapRequestEnabled: (commandParts[2] === 'ACK') ? true : false,\r\n                // The parameters part of the messages contains the \r\n                // enabled capabilities.\r\n            }\r\n            break;\r\n        case 'GLOBALUSERSTATE':  // Included only if you request the /commands capability.\r\n                                 // But it has no meaning without also including the /tags capability.\r\n            parsedCommand = {\r\n                command: commandParts[0]\r\n            }\r\n            break;               \r\n        case 'USERSTATE':   // Included only if you request the /commands capability.\r\n        case 'ROOMSTATE':   // But it has no meaning without also including the /tags capabilities.\r\n            parsedCommand = {\r\n                command: commandParts[0],\r\n                channel: commandParts[1]\r\n            }\r\n            break;\r\n        case 'RECONNECT':  \r\n            parsedCommand = {\r\n                command: commandParts[0]\r\n            }\r\n            break;\r\n        case '421':\r\n            return null;\r\n        case '001':  // Logged in (successfully authenticated). \r\n            parsedCommand = {\r\n                command: commandParts[0],\r\n                channel: commandParts[1]\r\n            }\r\n            break;\r\n        case '002':  // Ignoring all other numeric messages.\r\n        case '003':\r\n        case '004':\r\n        case '353':  // Tells you who else is in the chat room you're joining.\r\n        case '366':\r\n        case '372':\r\n        case '375':\r\n        case '376':\r\n            return null;\r\n        default:\r\n            return null;\r\n    }\r\n\r\n    return parsedCommand;\r\n} \r\nfunction parseSource(rawSourceComponent) {\r\n    if (null == rawSourceComponent) {  // Not all messages contain a source\r\n        return null;\r\n    }\r\n    else {\r\n        let sourceParts = rawSourceComponent.split('!');\r\n        return {\r\n            nick: (sourceParts.length == 2) ? sourceParts[0] : null,\r\n            host: (sourceParts.length == 2) ? sourceParts[1] : sourceParts[0]\r\n        }\r\n    }\r\n}\r\nfunction parseParameters(rawParametersComponent, command) {\r\n    let idx = 0\r\n    let commandParts = rawParametersComponent.slice(idx + 1).trim(); \r\n    let paramsIdx = commandParts.indexOf(' ');\r\n\r\n    if (-1 == paramsIdx) { // no parameters\r\n        command.botCommand = commandParts.slice(0); \r\n    }\r\n    else {\r\n        command.botCommand = commandParts.slice(0, paramsIdx); \r\n        command.botCommandParams = commandParts.slice(paramsIdx).trim();\r\n        // TODO: remove extra spaces in parameters string\r\n    }\r\n\r\n    return command;\r\n}\r\n\r\nvar chat = {\r\n    parseMessage(message) {\r\n\r\n        let parsedMessage = {  // Contains the component parts.\r\n            tags: null,\r\n            source: null,\r\n            command: null,\r\n            parameters: null,\r\n            action: false,\r\n        };\r\n    \r\n        // The start index. Increments as we parse the IRC message.\r\n    \r\n        let idx = 0; \r\n    \r\n        // The raw components of the IRC message.\r\n    \r\n        let rawTagsComponent = null;\r\n        let rawSourceComponent = null; \r\n        let rawCommandComponent = null;\r\n        let rawParametersComponent = null;\r\n    \r\n        // If the message includes tags, get the tags component of the IRC message.\r\n    \r\n        if (message[idx] === '@') {  // The message includes tags.\r\n            let endIdx = message.indexOf(' ');\r\n            rawTagsComponent = message.slice(1, endIdx);\r\n            idx = endIdx + 1; // Should now point to source colon (:).\r\n        }\r\n    \r\n        // Get the source component (nick and host) of the IRC message.\r\n        // The idx should point to the source part; otherwise, it's a PING command.\r\n    \r\n        if (message[idx] === ':') {\r\n            idx += 1;\r\n            let endIdx = message.indexOf(' ', idx);\r\n            rawSourceComponent = message.slice(idx, endIdx);\r\n            idx = endIdx + 1;  // Should point to the command part of the message.\r\n        }\r\n    \r\n        // Get the command component of the IRC message.\r\n    \r\n        let endIdx = message.indexOf(':', idx);  // Looking for the parameters part of the message.\r\n        if (-1 == endIdx) {                      // But not all messages include the parameters part.\r\n            endIdx = message.length;                 \r\n        }\r\n    \r\n        rawCommandComponent = message.slice(idx, endIdx).trim();\r\n    \r\n        // Get the parameters component of the IRC message.\r\n    \r\n        if (endIdx != message.length) {  // Check if the IRC message contains a parameters component.\r\n            idx = endIdx + 1;            // Should point to the parameters part of the message.\r\n            rawParametersComponent = message.slice(idx);\r\n        }\r\n    \r\n        // Parse the command component of the IRC message.\r\n    \r\n        parsedMessage.command = parseCommand(rawCommandComponent);\r\n    \r\n        // Only parse the rest of the components if it's a command\r\n        // we care about; we ignore some messages.\r\n    \r\n        if (null == parsedMessage.command) {  // Is null if it's a message we don't care about.\r\n            return null; \r\n        }\r\n        else {\r\n            if (null != rawTagsComponent) {  // The IRC message contains tags.\r\n                parsedMessage.tags = parseTags(rawTagsComponent);\r\n            }\r\n    \r\n            parsedMessage.source = parseSource(rawSourceComponent);\r\n    \r\n            parsedMessage.parameters = rawParametersComponent;\r\n            if (rawParametersComponent && rawParametersComponent[0] === '!') {  \r\n                // The user entered a bot command in the chat window.            \r\n                parsedMessage.command = parseParameters(rawParametersComponent, parsedMessage.command);\r\n            }\r\n        }\r\n\r\n        if (parsedMessage.parameters) {\r\n            if (parsedMessage.parameters.split(\" \")[0] == \"\\x01ACTION\") parsedMessage.action = true;\r\n            parsedMessage.parameters = parsedMessage.parameters.replace(\"\u0001ACTION\", \"\")\r\n            parsedMessage.parameters = parsedMessage.parameters.replace(\"\u0001\", \"\")\r\n        }\r\n    \r\n        return parsedMessage;\r\n    },\r\n}\r\n\r\nexport default chat","import chat from '@/utils/chat.js'\r\n\r\n// const wait = async(ms) => {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(resolve, ms);\r\n//     });\r\n// };\r\n\r\nexport default class Twitch {\r\n    constructor(channel) {\r\n        this.ws = null\r\n        this.IsDisconnected = true\r\n        this.ManuallyClosed = false\r\n\r\n        this.channel = channel\r\n        this.channelID = null\r\n\r\n        this.OnUserId = null\r\n        this.OnPrivateMessage = null\r\n    }\r\n\r\n    connect() {\r\n        if (!this.IsDisconnected) {\r\n            return\r\n        }\r\n\r\n        this.ws = new WebSocket(\"wss://irc-ws.chat.twitch.tv:443\");\r\n        this.ws.onmessage = (e) => this.onMessage(e)\r\n        this.ws.onopen = () => this.onOpen()\r\n        this.ws.onerror = () => this.onError()\r\n        this.ws.onclose = () => this.onClose()\r\n    }\r\n\r\n    part(channel) {\r\n      this.ws.send(`PART #${channel}`)\r\n    }\r\n\r\n    join(channel) {\r\n      this.ws.send(`PART #${channel}`)\r\n    }\r\n\r\n    disconnect() {\r\n      if (this.ws != null) {\r\n        this.ManuallyClosed = true\r\n        this.ws.close()\r\n      }\r\n    }\r\n\r\n    Disconnect() {\r\n      this.ws.close()\r\n    }\r\n\r\n    async onError() {\r\n        if (this.ManuallyClosed) return \r\n        console.log(\"Connection error occured, disconnecting...\")\r\n        this.ws.close()\r\n    }\r\n\r\n    async onClose() {\r\n        if (!this.ManuallyClosed) {\r\n          console.log(\"Disconnected, attempting to reconnect...\")\r\n          if ([\"t2x2\", \"shampan0v\", \"rj_st\", \"redfeed_sa\"].includes(this.channel)) { // for logs\r\n            this.OnPrivateMessage({\"tags\":{\"badge-info\":null,\"badges\":{},\"color\":\"#FFFFFF\",\"display-name\":\"System\",\"emotes\":null,\"first-msg\":\"0\",\"id\":\"4e9b10fb-7e80-46b5-9652-efc894188334\",\"mod\":\"0\",\"returning-chatter\":\"0\",\"room-id\":\"22484632\",\"subscriber\":\"0\",\"tmi-sent-ts\":\"1680165804876\",\"turbo\":\"0\",\"user-id\":\"407046453\",\"user-type\":null},\"source\":{\"nick\":\"System\",\"host\":\"rj_st@rj_st.tmi.twitch.tv\"},\"command\":{\"command\":\"PRIVMSG\",\"channel\":\"#forsen\"},\"parameters\":\"[TWITCH] Disconnected\",\"BG\":\"0\"})\r\n          }\r\n          this.IsDisconnected = true\r\n          \r\n          setTimeout(() => {this.connect()}, 1000);\r\n        } \r\n    }\r\n\r\n    async onOpen() {\r\n        console.log(\"1232132312\")\r\n        this.IsDisconnected = false;\r\n        this.ws.send(\"NICK justinfan1337\")\r\n        this.ws.send(\"JOIN #\" + this.channel.toLowerCase());\r\n        this.ws.send('CAP REQ :twitch.tv/tags twitch.tv/commands')\r\n    }\r\n\r\n    async onMessage(e) {\r\n        let messages = e.data.split(\"\\r\\n\")\r\n\r\n        messages.forEach(message => {\r\n          let payload = chat.parseMessage(message)\r\n          if (!payload) {\r\n            return\r\n          }\r\n\r\n          switch (payload.command.command) {\r\n              case \"PRIVMSG\":\r\n                  if (this.channelID == null) {\r\n                    this.channelID = payload.tags[\"room-id\"]\r\n                    this.OnUserId(payload.tags[\"room-id\"])\r\n                  }\r\n                  this.OnPrivateMessage(payload)\r\n                  break;\r\n              case \"PING\":\r\n                  this.ws.send(`PONG ${payload.message}`)\r\n          }\r\n        })\r\n    }\r\n}","var Huita = {\r\n\r\n    async get7tvEmoteSet(set_id) {\r\n        const response = await fetch(`https://7tv.io/v3/emote-sets/${set_id}`)\r\n        if (response.ok) {\r\n            let emotes = []\r\n            \r\n            const json = await response.json()\r\n            if (json.emotes != undefined) {\r\n                for (const emote of json.emotes) {\r\n                    emotes.push({\"Name\": emote.name, \"ID\": emote.id, \"Type\": \"7TV\", \"ZeroWidth\": emote.flags == 1})\r\n                }\r\n    \r\n                let owner = json.owner.username\r\n    \r\n                return [emotes, owner]\r\n            } else {\r\n                return [undefined, undefined]\r\n            }\r\n        } \r\n        throw \"failed to fetch 7tv emote set\"\r\n    },\r\n\r\n    async wait(ms) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(resolve, ms);\r\n        });\r\n    },\r\n    \r\n    async RetryOnError(func, args, attempts) {\r\n        for (let a = 0; a < attempts; a++) {\r\n            try {\r\n                return await func(...args)\r\n            } catch (error) {\r\n                console.log(\"Attemption failed, retrying in 1s\")\r\n                console.log(`Error: ${error}`)\r\n                await this.wait(1000)\r\n                continue\r\n            }\r\n        }\r\n        console.log(\"Failed to fetch func\")\r\n        return [];\r\n    },\r\n\r\n    async getUserID(channel) {\r\n        const response = await fetch(`https://api.ivr.fi/v2/twitch/user?login=${channel}`)\r\n        if (response.ok) {\r\n            console.log(\"IVR API successful, getting user-id...\")\r\n            const json = await response.json()\r\n            return json[0].id\r\n        }\r\n        throw \"Unable to get user id from ivr API!\"\r\n    },\r\n    async getGlobalBadges() {\r\n        let badges = {}\r\n\r\n        const response = await fetch(\"https://api.ivr.fi/v2/twitch/badges/global\")\r\n        if (response.ok) {\r\n                const json = await response.json()\r\n            for (const value of json) {\r\n                let vers = value[\"versions\"]\r\n                let finalVersions = {}\r\n                for (const value of vers) {\r\n                    finalVersions[value[\"id\"]] = value[\"image_url_2x\"]\r\n                }\r\n                badges[value[\"set_id\"]] = finalVersions\r\n            }\r\n            return badges\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    async getSubscriberBadges(user_id) {\r\n        let subscriber = {}\r\n\r\n        const response = await fetch(`https://api.ivr.fi/v2/twitch/badges/channel?id=${user_id}`)\r\n        const json = await response.json()\r\n        if (response.ok && json.length > 0) {\r\n            for (const obj of json) {\r\n                if (obj[\"set_id\"] == \"subscriber\") {\r\n                    let vers = obj[\"versions\"]\r\n                    let finalVersions = {}\r\n                    for (const value of vers) {\r\n                        finalVersions[value[\"id\"]] = value[\"image_url_2x\"]\r\n                    }\r\n                    subscriber = finalVersions\r\n                    return subscriber\r\n                }\r\n            }\r\n        }\r\n        if (response.status != 404 && json.length > 0) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    // async getUserBy7tvId(id) {\r\n    //     const resp = await fetch(\"https://7tv.io/v3/gql\", {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //           'Accept': 'application/json',\r\n    //           'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             \"operationName\": \"GetUserForUserPage\",\r\n    //             \"variables\": {\r\n    //               \"id\": id\r\n    //             },\r\n    //             \"query\": \"query GetUserForUserPage($id: ObjectID!) {\\n  user(id: $id) {\\n    id\\n    username\\n    display_name\\n    created_at\\n    avatar_url\\n    style {\\n      color\\n      paint_id\\n      __typename\\n    }\\n    biography\\n    editors {\\n      id\\n      permissions\\n      visible\\n      user {\\n        id\\n        username\\n        display_name\\n        avatar_url\\n        style {\\n          color\\n          paint_id\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    emote_sets {\\n      id\\n      name\\n      capacity\\n      owner {\\n        id\\n        __typename\\n      }\\n      __typename\\n    }\\n    roles\\n    connections {\\n      id\\n      username\\n      display_name\\n      platform\\n      linked_at\\n      emote_capacity\\n      emote_set_id\\n      __typename\\n    }\\n    __typename\\n  }\\n}\"\r\n    //           })\r\n    //       })\r\n    //     const json = await resp.json()\r\n    //     if (json.data.user != null) {\r\n    //         return json.data.user\r\n    //     }\r\n    //     return undefined \r\n    // },\r\n    async get7tvBadgesPaints() {\r\n            let badges = []\r\n            let paints = []\r\n\r\n        const response = await fetch(`https://api.7tv.app/v2/badges?user_identifier=twitch_id`)\r\n        if (response.ok) {\r\n                const json = await response.json()\r\n            for (const value of json[\"badges\"]) {\r\n                badges.push({\"Users\": value.users, \"Url\": value.urls[1][1], Type: \"7TV\"})\r\n            }\r\n            for (const value of json[\"paints\"]) {\r\n                paints.push(value)\r\n            }\r\n            return [badges, paints]\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return []\r\n    },\r\n    async get7tvEmotes(user_id) {\r\n        let emotes = {}\r\n\r\n        const response = await fetch(`https://7tv.io/v3/users/twitch/${user_id}`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            for (const value of json[\"emote_set\"][\"emotes\"]) {\r\n                emotes[value.name] = {\"ID\": value.id, \"Type\": \"7TV\", \"ZeroWidth\": value.flags == 1, \"ratio\": value.data.host.files[0].width/value.data.host.files[0].height}\r\n            }\r\n            return [emotes, json[\"emote_set\"][\"id\"]]\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"7tv not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    async get7tvGlobalEmotes() {\r\n        let emotes = {}\r\n\r\n        const response = await fetch(`https://7tv.io/v3/emote-sets/62cdd34e72a832540de95857`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            for (const value of json[\"emotes\"]) {\r\n                emotes[value.name] = {\"ID\": value.id, \"Type\": \"7TV\", \"ZeroWidth\": value.flags == 1}\r\n            }\r\n            return emotes\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    async getBttvEmotes(user_id) {\r\n        let emotes = {}\r\n        const response = await fetch(`https://api.betterttv.net/3/cached/users/twitch/${user_id}`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            if (json[\"sharedEmotes\"]) {\r\n                for (const value of json[\"sharedEmotes\"]) {\r\n                    emotes[value.code] = {\"ID\": value.id, \"Type\": \"BTTV\"}\r\n                }\r\n            }\r\n            if (json[\"channelEmotes\"]) {\r\n                for (const value of json[\"channelEmotes\"]) {\r\n                    emotes[value.code] = {\"ID\": value.id, \"Type\": \"BTTV\"}\r\n                }\r\n            }\r\n            return emotes\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    async getBttvGlobalEmotes() {\r\n        let emotes = {}\r\n\r\n        const response = await fetch(`https://api.betterttv.net/3/cached/emotes/global`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            for (const value of json) {\r\n                emotes[value.code] = {\"ID\": value.id, \"Type\": \"BTTV\"}\r\n            }\r\n            return emotes\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    async getFfzEmotes(channel) { // returns emotes, mod badge, vip badge\r\n        let emotes = {}\r\n\r\n        const response = await fetch(`https://api.frankerfacez.com/v1/room/${channel}`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            for (const value of json[\"sets\"][json[\"room\"][\"set\"].toString()][\"emoticons\"]) {\r\n                emotes[value.name] = {\"ID\": value.id, \"Type\": \"FFZ\"}\r\n            }\r\n\r\n            // getting custom badges:\r\n            console.log(json.room.mod_urls)\r\n            let mod_badge = undefined\r\n            if (json.room.mod_urls != undefined) mod_badge = json.room.mod_urls[\"2\"]\r\n\r\n            console.log(json.vip_badge)\r\n            let vip_badge = undefined\r\n            if (json.room.vip_badge != undefined) vip_badge = json.room.vip_badge[\"2\"]\r\n            return [emotes, mod_badge, vip_badge]\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return []\r\n    },\r\n    async getFfzGlobalEmotes() {\r\n        let emotes = {}\r\n\r\n        const response = await fetch(`https://api.frankerfacez.com/v1/set/global`)\r\n        if (response.ok) {\r\n            const json = await response.json()\r\n            for (const value of json[\"sets\"][\"3\"][\"emoticons\"]) {\r\n                emotes[value.name] = {\"ID\": value.id, \"Type\": \"FFZ\"}\r\n            }\r\n            return emotes\r\n        }\r\n        if (response.status != 404) {\r\n            throw \"not loaded\"\r\n        }\r\n        return {}\r\n    },\r\n    // @todo: ffz badges, bttv badges. Maybe add chatterino badges.\r\n}\r\n\r\nexport default Huita","import { render } from \"./overlay.vue?vue&type=template&id=06ab4a12\"\nimport script from \"./overlay.vue?vue&type=script&lang=js\"\nexport * from \"./overlay.vue?vue&type=script&lang=js\"\n\nimport \"./overlay.vue?vue&type=style&index=0&id=06ab4a12&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","$options","transition_group","default","_withCtx","_Fragment","_renderList","$data","currentEmotes","em","_createBlock","_component_BouncingEmote","key","Id","Url","width","Width","_","_createElementVNode","src","$props","_hoisted_2","getRandomInt","max","Math","floor","random","__default__","data","maxX","maxY","interval","undefined","posX","window","innerWidth","posY","innerHeight","speed","changeX","changeY","imgHeight","imgPos","x","y","props","String","Number","mounted","this","setInterval","update","methods","isRight","isBottom","isTop","isLeft","computed","position","__exports__","parseTags","tags","tagsToIgnore","dictParsedTags","parsedTags","split","forEach","tag","parsedTag","tagValue","dict","badges","pair","badgeParts","dictEmotes","emotes","emote","emoteParts","textPositions","positions","positionParts","push","startPosition","endPosition","emoteSetIds","Object","prototype","hasOwnProperty","call","parseCommand","rawCommandComponent","parsedCommand","commandParts","command","channel","isCapRequestEnabled","parseSource","rawSourceComponent","sourceParts","nick","length","host","parseParameters","rawParametersComponent","idx","slice","trim","paramsIdx","indexOf","botCommand","botCommandParams","chat","parseMessage","message","parsedMessage","source","parameters","action","rawTagsComponent","endIdx","replace","Twitch","constructor","ws","IsDisconnected","ManuallyClosed","channelID","OnUserId","OnPrivateMessage","connect","WebSocket","onmessage","e","onMessage","onopen","onOpen","onerror","onError","onclose","onClose","part","send","join","disconnect","close","Disconnect","console","log","includes","setTimeout","toLowerCase","messages","payload","Huita","get7tvEmoteSet","set_id","response","fetch","ok","json","flags","owner","username","wait","ms","Promise","resolve","RetryOnError","func","args","attempts","a","error","getUserID","getGlobalBadges","value","vers","finalVersions","status","getSubscriberBadges","user_id","subscriber","obj","get7tvBadgesPaints","paints","users","urls","Type","get7tvEmotes","files","height","get7tvGlobalEmotes","getBttvEmotes","code","getBttvGlobalEmotes","getFfzEmotes","toString","mod_badge","vip_badge","room","mod_urls","getFfzGlobalEmotes","components","BouncingEmote","deleteAfter","maxEmoteLife","Emotes","MessagesTemp","lastThink","Date","now","meanMessagesPerSecond","get7tvchannel","stv","apis","assign","onUserID","calcMeanMessages","messagesPerSecond","decide","extEmotes","ID","ratio","filter","m","created","async","client","i","render","makeBuiltIn","defineProperty","module","exports","target","descriptor","get","getter","set","setter","f","anObject","that","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","FORCED","INDICES_SUPPORT","O","calls","expected","addGetter","chr","pairs","getOwnPropertyDescriptor","configurable"],"sourceRoot":""}